{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teguh Imawan\\\\Documents\\\\CHATBOT-RELATE\\\\chatbot-client\\\\src\\\\Components\\\\Chatbot\\\\BotChat.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BotChat(props) {\n  _s();\n\n  const [response] = useState(props.response);\n  const [buttonList, setButtonList] = useState([]);\n  const [botResponse, setBotResponse] = useState(\"\");\n\n  const handleClick = e => {\n    props.onButtonClick(e.target.innerText);\n  };\n\n  useEffect(() => {\n    const list = response.split(\"[list]\").filter((item, index) => {\n      if (index > 0) {\n        return true;\n      }\n\n      return false;\n    });\n    setButtonList(list);\n    setBotResponse(response.split(\"[list]\")[0]);\n  }, [response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-1 mb-1 bot-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        pill: true,\n        bg: \"warning\",\n        text: \"dark\",\n        children: \"bot \\u2714\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \" \", botResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), buttonList.map((item, index) => {\n      const button = item.split(\",\");\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: button[1],\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          pill: true,\n          bg: \"info\",\n          className: \"chat-button\",\n          text: \"dark\",\n          style: {\n            margin: \"3px 5px 0 0\"\n          },\n          variant: \"outline-secondary\",\n          onClick: handleClick,\n          children: button[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotChat, \"BMuKsedoUBZgI8zgi7tKvhmvkvU=\");\n\n_c = BotChat;\nexport default BotChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotChat\");","map":{"version":3,"names":["useState","useEffect","Badge","BotChat","props","response","buttonList","setButtonList","botResponse","setBotResponse","handleClick","e","onButtonClick","target","innerText","list","split","filter","item","index","map","button","margin"],"sources":["C:/Users/Teguh Imawan/Documents/CHATBOT-RELATE/chatbot-client/src/Components/Chatbot/BotChat.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nfunction BotChat(props) {\r\n  const [response] = useState(props.response);\r\n  const [buttonList, setButtonList] = useState([]);\r\n  const [botResponse, setBotResponse] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    props.onButtonClick(e.target.innerText);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const list = response.split(\"[list]\").filter((item, index) => {\r\n      if (index > 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    setButtonList(list);\r\n\r\n    setBotResponse(response.split(\"[list]\")[0]);\r\n  }, [response]);\r\n\r\n  return (\r\n    <div className=\"mt-1 mb-1 bot-chat\">\r\n      <div>\r\n        <Badge pill bg=\"warning\" text=\"dark\">\r\n          bot &#10004;\r\n        </Badge>{\" \"}\r\n        {botResponse}\r\n      </div>\r\n      {buttonList.map((item, index) => {\r\n        const button = item.split(\",\");\r\n        return (\r\n          <a href={button[1]} target=\"_blank\" rel=\"noreferrer\" key={index}>\r\n            <Badge\r\n              pill\r\n              bg=\"info\"\r\n              className=\"chat-button\"\r\n              text=\"dark\"\r\n              style={{\r\n                margin: \"3px 5px 0 0\",\r\n              }}\r\n              variant=\"outline-secondary\"\r\n              onClick={handleClick}\r\n            >\r\n              {button[0]}\r\n            </Badge>\r\n          </a>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BotChat;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACtB,MAAM,CAACC,QAAD,IAAaL,QAAQ,CAACI,KAAK,CAACC,QAAP,CAA3B;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMU,WAAW,GAAIC,CAAD,IAAO;IACzBP,KAAK,CAACQ,aAAN,CAAoBD,CAAC,CAACE,MAAF,CAASC,SAA7B;EACD,CAFD;;EAIAb,SAAS,CAAC,MAAM;IACd,MAAMc,IAAI,GAAGV,QAAQ,CAACW,KAAT,CAAe,QAAf,EAAyBC,MAAzB,CAAgC,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC5D,IAAIA,KAAK,GAAG,CAAZ,EAAe;QACb,OAAO,IAAP;MACD;;MACD,OAAO,KAAP;IACD,CALY,CAAb;IAMAZ,aAAa,CAACQ,IAAD,CAAb;IAEAN,cAAc,CAACJ,QAAQ,CAACW,KAAT,CAAe,QAAf,EAAyB,CAAzB,CAAD,CAAd;EACD,CAVQ,EAUN,CAACX,QAAD,CAVM,CAAT;EAYA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,MAAX;QAAY,EAAE,EAAC,SAAf;QAAyB,IAAI,EAAC,MAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAGW,GAHX,EAIGG,WAJH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAOGF,UAAU,CAACc,GAAX,CAAe,CAACF,IAAD,EAAOC,KAAP,KAAiB;MAC/B,MAAME,MAAM,GAAGH,IAAI,CAACF,KAAL,CAAW,GAAX,CAAf;MACA,oBACE;QAAG,IAAI,EAAEK,MAAM,CAAC,CAAD,CAAf;QAAoB,MAAM,EAAC,QAA3B;QAAoC,GAAG,EAAC,YAAxC;QAAA,uBACE,QAAC,KAAD;UACE,IAAI,MADN;UAEE,EAAE,EAAC,MAFL;UAGE,SAAS,EAAC,aAHZ;UAIE,IAAI,EAAC,MAJP;UAKE,KAAK,EAAE;YACLC,MAAM,EAAE;UADH,CALT;UAQE,OAAO,EAAC,mBARV;UASE,OAAO,EAAEZ,WATX;UAAA,UAWGW,MAAM,CAAC,CAAD;QAXT;UAAA;UAAA;UAAA;QAAA;MADF,GAA0DF,KAA1D;QAAA;QAAA;QAAA;MAAA,QADF;IAiBD,CAnBA,CAPH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAnDQhB,O;;KAAAA,O;AAqDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}